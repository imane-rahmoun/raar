main_file
syntactic_pattern_name TO_LANGUAGE related_to GENERATOR

// SY_MAIN: code de la fonction main
// apply: SY_DECLARE_ALL_STT_PLACE, SY_DECLARE_ALL_LOC_TRANS, 
//        SY_DECLARE_ALL_SYNC_TRANS, SY_DECLARE_ALL_COMM_PLACE
syntactic_rule SY_MAIN is
begin
  put_line('#include <stdlib.h>');
  put_line('#include <stdio.h>');
  put_line('#include <string.h>');
  put_line('#include <mpi.h>');
  put_line('#include "../runtime/runtime.h"');
  put_line('');

  put_line('int main(int argc, char **argv) {');
  increase_marging;
  put_line('int i, j;');
  put_line('int mpi_nb_nodes, rank;');
  put_line('');
  put_line('MPI_Init(&argc, &argv);');
  put_line('MPI_Comm_rank(MPI_COMM_WORLD, &rank);');
  put_line('MPI_Comm_size(MPI_COMM_WORLD, &mpi_nb_nodes);');
  put_line('');

  put_line('if (rank == 0) {');
  increase_marging;
  put('printf("name = '); put($str(0)); put_line('\n");');
  put_line('printf("timestamp = %d\n", time(NULL));');
  decrease_marging;
  put_line('}');
  put_line('srand(time(NULL) + rank);');
  put_line('');

  // declarations des objets
  put_line('int uniqid_count = 1;');
  apply($1); // SY_DECLARE_ALL_STT_PLACE
  apply($2); // SY_DECLARE_ALL_COMM_PLACE
  apply($3); // SY_DECLARE_ALL_SYNC_TRANS
  apply($4); // SY_DECLARE_ALL_LOC_TRANS
  put_line('');

  put_line('int nb_sync = 0; // TODO');
  put_line('#define NB_PROCESS TODO');
  put_line('process_t proc[NB_PROCESS] = {');
  put_line('// TODO');
  put_line('};');
  put_line('');

  put_line('if (mpi_nb_nodes != 1 + nb_sync + total_instances) {');
  put_line('  fprintf(stderr, "error: need %d process\n", 1 + nb_sync + total_instances);');
  put_line('  exit(1);');
  put_line('}');
  put_line('');

  put_line('// le place manager (va gerer tous les comm place)');
  put_line('if (rank == RANK_PLACE_MANAGER) { // 0');
  put_line('  // liste des COMM_PLACES');
  increase_marging;
  apply SY_LIST_COMM_PLACE($2);
  decrease_marging;
  put_line('  place_manager(list_cp, 0, mpi_nb_nodes, MPI_COMM_WORLD);');
  put_line('  MPI_Finalize();');
  put_line('  exit(0);');
  put_line('}');
  put_line('');

  put_line('// TODO : sync manager');
  put_line('');

  put_line('// associe une instance a un rank mpi');
  put_line('instance_t *myinstance;');
  put_line('int current_rank = 1 + nb_sync; // les processus place_manager et sync_manager');
  put_line('int total_instances = 0;');
  put_line('for (i = 0 ; i < NB_PROCESS ; i++) {');
  put_line('  for (j = 0 ; j < proc[i].nb_instances ; j++) {');
  put_line('    if (rank == current_rank)');
  put_line('      myinstance = &proc[i].instances[j];');
  put_line('    proc[i].instances[j].rank = current_rank;');
  put_line('    current_rank++;');
  put_line('    total_instances++;');
  put_line('  }');
  put_line('}');
  put_line('');

  put_line('// TODO : add_link');
  put_line('');

  put_line('MPI_Barrier(MPI_COMM_WORLD);');
  put_line('run(myinstance);');
  put_line('MPI_Finalize();');

  put_line('return 0;');
  decrease_marging;
  put_line('}');
end;

include_file('sy_list_comm_places.msst');
include_file('sy_declare_objects.msst');
